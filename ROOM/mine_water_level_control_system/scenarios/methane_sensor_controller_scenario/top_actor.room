RoomModel top_actor {
	import room.basic.service.timing.* from "../../../org.eclipse.etrice.modellib.java/model/TimingService.room"
	import base_actor.* 			   from "../base_actor.room"

	ActorClass top_actor_t extends base_actor_t {
		Behavior {
			StateMachine {
				State step1 {
					entry '''
						System.out.println (
							"STEP 1"
						);
					'''	
				}
				State step2 { 
					entry '''
						System.out.println (
							"STEP 2"
						);
					'''	
				}
				State step3 { 
					entry '''
						System.out.println (
							"STEP 3"
						);
					'''	
				}
				State step4 { 
					entry '''
						System.out.println (
							"STEP 4"
						);
					'''	
				}
				State step5 { 
					entry '''
						System.out.println (
							"STEP 5"
						);
					'''	
				}
				State step6 { 
					entry '''
						System.out.println (
							"STEP 6"
						);
					'''	
				}
				State step7 { 
					entry '''
						System.out.println (
							"STEP 7"
						);
					'''	
				}
				State step8 { 
					entry '''
						System.out.println (
							"STEP 8"
						);
					'''	
				}

				RefinedTransition start { 
					action '''
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}
				
				Transition transition0 : step0 -> step1 {
					triggers {
						< timeout : timer_access_point >
					}
					action '''
						System.out.println ( 
							"Setting high water level sensor"
						);
						
						super.mine_water_level_control_system_update_port.update (
							Constants.WATER_LEVEL_SENSORS.HIGH_WATER_LEVEL_THRESHOLD + 1	
						);
						
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}
				
				Transition stall1 : step1 -> step1 {
					triggers {
						< timeout : timer_access_point guard '''
							super.is_pump_turned_on ( ) == false 
						'''>
					}
					action '''
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}	
					
				Transition transition1 : step1 -> step2 {
					triggers {
						< timeout : timer_access_point guard '''
							super.is_pump_turned_on ( ) == true
						'''>
					}
					action '''
						System.out.println (
							"Pump activated"
						);

						super.pause ( );

						System.out.println ( 
							"Setting water flow sensor to avoid alarm activation"
						);

						super.water_flow_sensor.set_value (
							this.logger,
							super.getName ( ),
							1
						);

						System.out.println (
							"Setting ch4 sensor above threshold and setting water flow sensor to avoid alarm activation"
						);

						int ch4_sensor_value = super.get_above_threshold_value (
							true,
							Constants.CH4_SENSOR_CONTROLLER.THRESHOLD
						);

						super.ch4_sensor.set_value (
							this.logger,
							super.getName ( ),
							ch4_sensor_value
						);

						super.ch4_sensor.set_read_error_occurred (
							this.logger,
							super.getName ( ),
							false
						);
						
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}

				Transition stall2 : step2 -> step2 {
					triggers {
						< timeout : timer_access_point guard '''
							( super.is_pump_turned_on ( ) == true ) || 
							( super.is_alarm_turned_on ( ) == false ) 
						'''>
					}
					action '''
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}	
					
				Transition transition2 : step2 -> step3 {
					triggers {
						< timeout : timer_access_point guard '''
							( super.is_pump_turned_on ( ) == false ) && 
							( super.is_alarm_turned_on ( ) == true ) 
						'''>
					}
					action '''
						System.out.println ( 
							"Pump deactivated"
						);

						System.out.println ( 
							"Alarm activated"
						);

						super.pause ( );

						System.out.println ( 
							"Unsetting water flow sensor to avoid alarm activation"
						);

						super.water_flow_sensor.set_value (
							this.logger,
							super.getName ( ),
							0
						);
						
						System.out.println ( 
							"Setting ch4 sensor below threshold"
						);

						int ch4_sensor_value = super.get_below_threshold_value (
							true,
							Constants.CH4_SENSOR_CONTROLLER.THRESHOLD
						);

						super.ch4_sensor.set_value (
							this.logger,
							super.getName ( ),
							ch4_sensor_value
						);

						super.ch4_sensor.set_read_error_occurred (
							this.logger,
							super.getName ( ),
							false
						);

						
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}

				Transition stall3 : step3 -> step3 {
					triggers {
						< timeout : timer_access_point guard '''
							( super.is_pump_turned_on ( ) == false ) || 
							( super.is_alarm_turned_on ( ) == true ) 
						'''>
					}
					action '''
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}	
					
				Transition transition3 : step3 -> step4 {
					triggers {
						< timeout : timer_access_point guard '''
							( super.is_pump_turned_on ( ) == true ) && 
							( super.is_alarm_turned_on ( ) == false ) 
						'''>
					}
					action '''
						System.out.println ( 
							"Pump activated"
						);

						System.out.println ( 
							"Alarm deactivated"
						);

						super.pause ( );

						System.out.println ( 
							"Setting water flow sensor to avoid alarm activation"
						);

						super.water_flow_sensor.set_value (
							this.logger,
							super.getName ( ),
							1
						);

						System.out.println ( 
							"Using user port to deactivate pump and setting water flow sensor to avoid alarm activation"
						);
						
						super.mine_water_level_control_system_user_port.turn_off ( );
						
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}

				Transition stall4 : step4 -> step4 {
					triggers {
						< timeout : timer_access_point guard '''
							super.is_pump_turned_on ( ) == true
						'''>
					}
					action '''
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}	
					
				Transition transition4 : step4 -> step5 {
					triggers {
						< timeout : timer_access_point guard '''
							super.is_pump_turned_on ( ) == false
						'''>
					}
					action '''
						System.out.println ( 
							"Pump deactivated"
						);

						System.out.println ( "Unsetting water flow sensor to avoid alarm activation" );
						
						super.water_flow_sensor.set_value (
							this.logger,
							super.getName ( ),
							0
						);

						super.pause ( );

						System.out.println ( 
							"Setting ch4 sensor above threshold"
						);

						int ch4_sensor_value = super.get_above_threshold_value (
							true,
							Constants.CH4_SENSOR_CONTROLLER.THRESHOLD
						);

						super.ch4_sensor.set_value (
							this.logger,
							super.getName ( ),
							ch4_sensor_value
						);

						super.ch4_sensor.set_read_error_occurred (
							this.logger,
							super.getName ( ),
							false
						);

						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}

				Transition stall5 : step5 -> step5 {
					triggers {
						< timeout : timer_access_point guard '''
							super.is_alarm_turned_on ( ) == false
						'''>
					}
					action '''
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}	
					
				Transition transition5 : step5 -> step6 {
					triggers {
						< timeout : timer_access_point guard '''
							super.is_alarm_turned_on ( ) == true
						'''>
					}
					action '''
						System.out.println ( 
							"Alarm activated"
						);	

						System.out.println ( 
							"Using user port to activate pump"
						);
						
						super.mine_water_level_control_system_user_port.turn_on ( );

						super.pause ( );

						System.out.println ( 
							"Setting ch4 sensor below threshold"
						);

						int ch4_sensor_value = super.get_below_threshold_value (
							true,
							Constants.CH4_SENSOR_CONTROLLER.THRESHOLD
						);

						super.ch4_sensor.set_value (
							this.logger,
							super.getName ( ),
							ch4_sensor_value
						);

						super.ch4_sensor.set_read_error_occurred (
							this.logger,
							super.getName ( ),
							false
						);
						
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}

				Transition stall6 : step6 -> step6 {
					triggers {
						< timeout : timer_access_point guard '''
							( super.is_pump_turned_on ( ) == false ) || 
							( super.is_alarm_turned_on ( ) == true ) 
						'''>
					}
					action '''
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
						System.exit ( 1 );
					'''
				}	
					
				Transition transition6 : step6 -> step7 {
					triggers {
						< timeout : timer_access_point guard '''
							( super.is_pump_turned_on ( ) == true ) && 
							( super.is_alarm_turned_on ( ) == false ) 
						'''>
					}
					action '''
						System.out.println (
							"Pump activated"
						);

						System.out.println ( 
							"Alarm deactivated"
						);

						System.out.println ( 
							"Setting water flow sensor to avoid alarm activation"
						);

						super.water_flow_sensor.set_value (
							this.logger,
							super.getName ( ),
							1
						);
						
						super.pause ( );
						
						System.out.println ( "Setting low water level sensor" );

						super.mine_water_level_control_system_update_port.update (
							Constants.WATER_LEVEL_SENSORS.LOW_WATER_LEVEL_THRESHOLD - 1	
						);

						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}

				Transition stall7 : step7 -> step7 {
					triggers {
						< timeout : timer_access_point guard '''
							super.is_pump_turned_on ( ) == true
						'''>
					}
					action '''
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}	

				Transition transition7 : step7 -> step8 {
					triggers {
						< timeout : timer_access_point guard '''
							super.is_pump_turned_on ( ) == false
						'''>
					}
					action '''
						System.out.println (
							"Pump deactivated"
						);
						
						super.stop_scenario ( );
					'''
				}
			}
		}
	}
}
