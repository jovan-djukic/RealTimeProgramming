RoomModel top_actor {
	import room.basic.service.timing.* from "../../../org.eclipse.etrice.modellib.java/model/TimingService.room"
	import base_actor.* 			   from "../base_actor.room"

	ActorClass top_actor_t extends base_actor_t {
		Behavior {
			StateMachine {
				State step1 { 
					entry '''
						System.out.println (
							"STEP 1"
						);
					'''
				}
				State step2 {
					entry '''
						System.out.println (
							"STEP 2"
						);
					'''
				}

				RefinedTransition start { 
					action '''
						System.out.println ( "Setting o sensor to error" );

						super.o_sensor.set_value (
							this.logger,
							super.getName ( ),
							0
						);

						super.o_sensor.set_read_error_occurred (
							this.logger,
							super.getName ( ),
							true	
						);
						
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}

				Transition stall0 : step0 -> step0 {
					triggers {
						< timeout : timer_access_point guard '''
							super.is_alarm_turned_on ( ) == false
						'''>
					}
					action '''
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}	
					
				Transition transition0 : step0 -> step1 {
					triggers {
						< timeout : timer_access_point guard '''
							super.is_alarm_turned_on ( ) == true 
						'''>
					}
					action '''
						System.out.println (
							"Alarm activated"
						);

						super.pause ( );

						System.out.println (
							"Setting o sensor below threshold"
						);

						int o_sensor_value = super.get_below_threshold_value (
							false,
							Constants.O_SENSOR_CONTROLLER.THRESHOLD
						);

						super.o_sensor.set_value (
							this.logger,
							super.getName ( ),
							o_sensor_value
						);

						super.o_sensor.set_read_error_occurred (
							this.logger,
							super.getName ( ),
							false
						);
						
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}

				Transition stall1 : step1 -> step1 {
					triggers {
						< timeout : timer_access_point guard '''
							super.is_alarm_turned_on ( ) == true 
						'''>
					}
					action '''
						super.timer_access_point.startTimeout (
							Constants.SCENARIO.CHECK_PERIOD
						);
					'''
				}	
					
				Transition transition1 : step1 -> step2 {
					triggers {
						< timeout : timer_access_point guard '''
							super.is_alarm_turned_on ( ) == false 
						'''>
					}
					action '''
						System.out.println (
							"Alarm deactivated"
						);
						
						super.stop_scenario ( );
					'''
				}
			}
		}
	}
}
